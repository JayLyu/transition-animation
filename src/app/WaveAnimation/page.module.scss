.wrapper {
  --index: calc(1vw + 1vh);
  --transition: cubic-bezier(.1, .7, 0, 1);
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100%;
  width: 100%;
  .items {
    display: flex;
    gap: 0.4rem;
    perspective: calc(var(--index) * 35);

    .item {
      width: calc(var(--index) * 3);
      height: calc(var(--index) * 12);
      background-color: #222;
      background-size: cover;
      background-position: center;
      cursor: pointer;
      filter: grayscale(1) brightness(.5);
      transition: transform 1.25s var(--transition), filter 3s var(--transition), width 1.25s var(--transition);
      will-change: transform, filter, rotateY, width;

      &::before, &::after {
        content: '';
        position: absolute;
        height: 100%;
        width: 20px;
        right: calc(var(--index) * -1);
      }
      &:after {
        left: calc(var(--index) * -1);
      }

      &:hover {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 10));
        
        // 选择该元素的直接后一个兄弟元素，即右边的元素
        + * {
          filter: inherit;
          transform: translateZ(calc(var(--index) * 8.5)) rotateY(35deg);
          z-index: -1;

          + * {
            filter: inherit;
            transform: translateZ(calc(var(--index) * 5.6)) rotateY(40deg);
            z-index: -2;

            + * {
              filter: inherit;
              transform: translateZ(calc(var(--index) * 2.5)) rotateY(30deg);
              z-index: -3;

              + * {
                filter: inherit;
                transform: translateZ(calc(var(--index) * .6)) rotateY(15deg);
                z-index: -4;
              }
            }
          }
        }
      }

      // 选择处于悬停状态的该元素的直接后一个兄弟元素，即左边的元素
      &:has(+ :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 8.5)) rotateY(-35deg);
      }

      &:has(+ * + :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 5.6)) rotateY(-40deg);
      }

      &:has(+ * + * + :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 2.5)) rotateY(-30deg);
      }

      &:has(+ * + * + * + :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * .6)) rotateY(-15deg);
      }

      &:active, &:focus {
        width: 28vw;
        filter: inherit;
        z-index: 100;
        transform: translateZ(calc(var(--index) * 10));
        margin: 0 .45vw;
      }
    }
  }
}
